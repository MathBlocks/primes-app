fragment PrimeAttributes on Prime {
    colossallyAbundantNumber
    emirp
    eulersLuckyNumber
    evilNumber
    fibonacciNumber
    friendlyNumber
    frugalNumber
    goodPrime
    happyNumber
    harshadNumber
    luckyNumber
    magicNumber
    perfectNumber
    repdigitNumber
    semiperfectNumber
    sophieGermainPrime
    squareNumber
    strongPrime
    taxicabNumber
    triangularNumber
    uniquePrime
    untouchableNumber
    weirdNumber
}

fragment PrimeAll on Prime {
    id
    childrenAsParent1 {
        id
    }
    childrenAsParent2 {
        id
    }
    claimed
    cousins {
        id
    }
    deadline
    image
    isListed
    isPrime
    isRentable
    lastBred

    owner {
        id
        address
    }
    parent1 {
        id
    }
    parent2 {
        id
    }
    primeFactorCount
    primeIndex
    primeFactors
    sexyPrimes {
        id
    }
    studFee
    suitors {
        id
    }
    twins {
        id
    }
    whitelistOnly
}

query Prime($tokenId: ID!) {
    prime(id: $tokenId) {
        ...PrimeAll
    }
}

query PrimesFromLastID($lastID: ID!) {
    primes(first: 1000, where: { id_gt: $lastID }) {
        id
    }
}

query AllPrimes {
    primes {
        id
    }
}

fragment PrimeAuctionAll on PrimeAuction {
    id
    bidder {
        id
    }
    amount
    settled
    startTime
    endTime
    winner {
        id
    }
}

query PrimeAuction($id: ID!) {
    primeAuction(id: $id) {
        ...PrimeAuctionAll
        bids(orderDirection: desc, orderBy: value) {
            id
            sender {
                id
            }
            value
            timestamp
        }
    }
}

query AuctionStatus {
    primesAuctionHouses {
        id
        address
        minBidIncrementPercentage
        breedingCooldown
        currentPrimeAuction {
            ...PrimeAuctionAll
        }
        reservePrice
        timeBuffer
    }
    primeBatches {
        id
        active
    }
}

query PrimeBatch($id: ID!) {
    primeBatch(id: $id) {
        id
        active
        remaining
        whitelist
    }
}

query PrimesForAccount($account: String!) {
    primes(where: { owner: $account }, orderBy: number, orderDirection: asc, first: 1000) {
        ...PrimeAll
    }
}


query Account($account: ID!) {
    account(id: $account) {
        primes(orderBy: number, orderDirection: asc) {
            id
        }
    }
}
